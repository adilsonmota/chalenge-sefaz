/* HSQLDB */

/*1.*/

CREATE TABLE TB_USER (
ID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
NAME VARCHAR(40) NOT NULL,
USERNAME VARCHAR(40) NOT NULL UNIQUE,
PASSWORD VARCHAR(40) NOT NULL
);

/*2.*/

CREATE TABLE TB_CONTACT (
ID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
NAME VARCHAR(40) NOT NULL,
EMAIL VARCHAR(40) NOT NULL,
USER_ID INTEGER NOT NULL,
FOREIGN KEY (USER_ID) REFERENCES TB_USER (ID)
ON DELETE CASCADE
);

/*3.*/

CREATE TABLE TB_PHONE (
ID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
TYP VARCHAR(40) NOT NULL,
DDD INTEGER NOT NULL,
NUMBR VARCHAR(11) NOT NULL,
CONTACT_ID INTEGER NOT NULL,
FOREIGN KEY (CONTACT_ID) REFERENCES TB_CONTACT (ID)
ON DELETE CASCADE
);

/* postgreSQL */

/*1.*/

CREATE TABLE TB_USER (
ID SERIAL PRIMARY KEY,
NAME VARCHAR(40) NOT NULL,
USERNAME VARCHAR(40) NOT NULL UNIQUE,
PASSWORD VARCHAR(40) NOT NULL
);

/*2.*/

CREATE TABLE TB_CONTACT (
ID SERIAL PRIMARY KEY,
NAME VARCHAR(40) NOT NULL,
EMAIL VARCHAR(40) NOT NULL,
USER_ID INTEGER NOT NULL,
FOREIGN KEY (USER_ID) REFERENCES TB_USER (ID)
ON DELETE CASCADE
);

/*3.*/

CREATE TABLE TB_PHONE (
ID SERIAL PRIMARY KEY,
TYP VARCHAR(40) NOT NULL,
DDD INTEGER NOT NULL,
NUMBR VARCHAR(11) NOT NULL,
CONTACT_ID INTEGER NOT NULL,
FOREIGN KEY (CONTACT_ID) REFERENCES TB_CONTACT (ID)
ON DELETE CASCADE
);

